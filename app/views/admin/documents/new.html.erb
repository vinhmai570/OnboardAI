<div class="min-h-screen bg-gray-50">
  <nav class="bg-white shadow">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex">
          <div class="flex-shrink-0 flex items-center">
            <h1 class="text-2xl font-bold text-gray-900">OnboardAI Admin</h1>
          </div>
        </div>
        <div class="flex items-center space-x-4">
          <%= link_to "Dashboard", admin_dashboard_path, class: "text-indigo-600 hover:text-indigo-900" %>
          <%= link_to "Documents", admin_documents_path, class: "text-indigo-600 hover:text-indigo-900" %>
          <%= link_to "Logout", logout_path, method: :delete, class: "text-red-600 hover:text-red-900" %>
        </div>
      </div>
    </div>
  </nav>

  <div class="max-w-3xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
      <div class="mb-8">
        <h2 class="text-3xl font-bold text-gray-900">Upload Document</h2>
        <p class="mt-2 text-gray-600">Upload a document for AI processing and course content generation.</p>
      </div>

      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <%= form_with model: [:admin, @document], local: true, multipart: true, class: "space-y-6" do |form| %>

            <!-- Error Messages -->
            <% if @document.errors.any? %>
              <div class="rounded-md bg-red-50 p-4">
                <div class="flex">
                  <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">There were some errors:</h3>
                    <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
                      <% @document.errors.full_messages.each do |message| %>
                        <li><%= message %></li>
                      <% end %>
                    </ul>
                  </div>
                </div>
              </div>
            <% end %>

            <!-- Document Title -->
            <div>
              <%= form.label :title, class: "block text-sm font-medium text-gray-700" %>
              <div class="mt-1">
                <%= form.text_field :title, required: true, placeholder: "Enter document title...",
                    class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" %>
              </div>
              <p class="mt-2 text-sm text-gray-500">Give your document a descriptive title for easy identification.</p>
            </div>

            <!-- File Upload -->
            <div>
              <%= form.label :file, "Document File", class: "block text-sm font-medium text-gray-700" %>
              <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md hover:border-gray-400 transition-colors" data-drop-zone>
                <div class="space-y-1 text-center">
                  <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <div class="flex text-sm text-gray-600">
                    <label for="document_file" class="relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500">
                      <span>Upload a file</span>
                      <%= form.file_field :file, required: true, accept: ".pdf,.docx,.doc,.txt,.md",
                          class: "sr-only",
                          onchange: "updateFileName(this)" %>
                    </label>
                    <p class="pl-1">or drag and drop</p>
                  </div>
                  <p class="text-xs text-gray-500">PDF, Word, Text, or Markdown files up to 10MB</p>
                  <p id="file-name" class="text-sm text-indigo-600 font-medium hidden"></p>
                </div>
              </div>
              <p class="mt-2 text-sm text-gray-500">
                Supported formats: PDF (.pdf), Word documents (.docx, .doc), Plain text (.txt), Markdown (.md)
              </p>
            </div>

            <!-- Processing Info -->
            <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-sm font-medium text-blue-800">What happens after upload?</h3>
                  <ul class="mt-2 text-sm text-blue-700 list-disc list-inside space-y-1">
                    <li>Document will be parsed and split into manageable chunks</li>
                    <li>AI embeddings will be generated for semantic search (if OpenAI key is configured)</li>
                    <li>Content will be available for AI-powered course generation</li>
                    <li>You can track processing status in the documents list</li>
                  </ul>
                </div>
              </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-end space-x-3">
              <%= link_to "Cancel", admin_documents_path,
                  class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
              <%= form.submit "Upload Document",
                  class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function updateFileName(input) {
  const fileNameElement = document.getElementById('file-name');
  if (input.files && input.files.length > 0) {
    const fileName = input.files[0].name;
    const fileSize = (input.files[0].size / 1024 / 1024).toFixed(2);
    fileNameElement.textContent = `Selected: ${fileName} (${fileSize} MB)`;
    fileNameElement.classList.remove('hidden');
  } else {
    fileNameElement.classList.add('hidden');
  }
}

// Drag and drop functionality
document.addEventListener('DOMContentLoaded', function() {
  const dropZone = document.querySelector('[data-drop-zone]');
  const fileInput = document.getElementById('document_file');

  if (dropZone && fileInput) {
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
      dropZone.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
      e.preventDefault();
      e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
      dropZone.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
      dropZone.addEventListener(eventName, unhighlight, false);
    });

    function highlight() {
      dropZone.classList.add('border-indigo-500', 'bg-indigo-50');
    }

    function unhighlight() {
      dropZone.classList.remove('border-indigo-500', 'bg-indigo-50');
    }

    dropZone.addEventListener('drop', handleDrop, false);

    function handleDrop(e) {
      const dt = e.dataTransfer;
      const files = dt.files;

      if (files.length > 0) {
        fileInput.files = files;
        updateFileName(fileInput);
      }
    }
  }
});
</script>
